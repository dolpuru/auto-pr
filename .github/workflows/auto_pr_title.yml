name: Sync PR with Issue

on:
  pull_request:
    types: [opened]

jobs:
  sync-pr-info:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Extract branch info
      id: extract
      run: echo "::set-output name=issue_number::$(echo '${{ github.head_ref }}' | grep -oP '(?<=-)\d+')"

    - name: Get Issue Details
      id: issue
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/${{ github.repository }}/issues/${{ steps.extract.outputs.issue_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

      
    - name: Set Environment Variables
      run: |
        echo \"ISSUE_DATA=${{ toJSON(steps.issue.outputs.data) }}\" >> $GITHUB_ENV
        echo \"PULL_REQUEST_NUMBER=${{ github.event.pull_request.number }}\" >> $GITHUB_ENV
        echo \"ISSUE_NUMBER=${{ steps.extract.outputs.issue_number }}\" >> $GITHUB_ENV

    

    - name: Debug Issue Data
      run: echo "$ISSUE_DATA"
      
    - name: Update PR
      run: |
        ISSUE_TITLE=$(echo jq -r '.title' <<< "$ISSUE_DATA" )
        if [ -z "$ISSUE_TITLE" ]; then
          echo "Failed to fetch the issue title."
          exit 1
        fi

    
        ASSIGNEES=$(echo "${{ steps.issue.outputs.data }}" | jq -r "[.assignees[].login] | join(',')")
        LABELS=$(echo "${{ steps.issue.outputs.data }}" | jq -r "[.labels[].name] | join(',')")
    
        # Update PR Title
        if [[ ! -z "$ISSUE_TITLE" ]]; then
          gh pr edit ${{ github.event.pull_request.number }} --title "$ISSUE_TITLE"
        fi
    
        # Update PR Body
        PR_BODY="Closes #${{ steps.extract.outputs.issue_number }}"
        gh pr edit ${{ github.event.pull_request.number }} --body "$PR_BODY"

        
        
        # Update PR Assignees
        if [[ ! -z "$ASSIGNEES" ]]; then
          IFS=',' read -r -a ADDR <<< "$ASSIGNEES"
          for assignee in "${ADDR[@]}"; do
            gh pr edit ${{ github.event.pull_request.number }} --add-assignee "$assignee"
          done
        fi
        
        # Update PR Labels
        if [[ ! -z "$LABELS" ]]; then
          IFS=',' read -r -a ADDR <<< "$LABELS"
          for label in "${ADDR[@]}"; do
            gh pr edit ${{ github.event.pull_request.number }} --add-label "$label"
          done
        fi
        
        )

      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        ISSUE_DATA: ${{ env.ISSUE_DATA }}
        PULL_REQUEST_NUMBER: ${{ env.PULL_REQUEST_NUMBER }}
        ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
